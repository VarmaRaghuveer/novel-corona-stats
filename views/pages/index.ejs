<!DOCTYPE html>
<html lang="en">

<head>
    <%- include ("../partials/head")%>
</head>

<body class="px-5">

    <header>
        <%- include ("../partials/header")%>
    </header>

    <main>
        <div class="jumbotron py-5">
            <div class="col">
                <div class="row">
                    <div class="col">
                        Confirmed: <br />
                        <h5><span class="badge badge-pill badge-warning"><%= worldStats.cases %></span></h5>
                    </div>
                    <div class="col">
                        Deaths: <br />
                        <h5><span class="badge badge-pill badge-danger"><%= worldStats.deaths %></span></h5>
                    </div>
                    <div class="col">
                        Recovered: <br />
                        <h5><span class="badge badge-pill badge-success"><%= worldStats.recovered %></span></h5>
                    </div>
                    <div class="col">
                        Active: <br />
                        <h5><span class="badge badge-pill badge-warning"><%= worldStats.active %></span></h5>
                    </div>
                    <div class="col">
                        Countries: <br />
                        <h5><span class="badge badge-pill badge-info"><%= worldStats.affectedCountries %></span></h5>
                    </div>
                    <div class="col">
                        Updated: <br />
                        <h5><span
                                class="badge badge-pill badge-info"><%= new Date(worldStats.updated).toString().substring(0,25) %></span>
                        </h5>
                    </div>
                </div>
            </div>
        </div>

        <div id="myModal" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 id="modalTitle" class="modal-title text-center"></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <canvas id="myChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="jumbotron py-5">
            <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for country..">
            <h6 class="text-center text-info ">Click on row to see spread trend for that country</h6>
            <table id="myTable" class="table table-striped table-dark">
                <thead>
                    <tr>
                        <th scope="col"></th>
                        <th scope="col">Country</th>
                        <th scope="col">New Cases</th>
                        <th scope="col">New Deaths</th>
                        <th scope="col">Active</th>
                        <th scope="col">Deaths</th>
                        <th scope="col">Recovered</th>
                        <th scope="col">Critical</th>

                    </tr>
                </thead>
                <tbody data-toggle="tooltip" data-placement="top" title="click on row to see spread trend">
                    <% worldStatsCountryWise.forEach(country => { %>

                    <tr onclick="handleOnClick('<%= country.country %>')">
                        <th scope="row"><img width="25" height="15" src="<%= country.countryInfo.flag %>" /> </th>
                        <td><%= country.country %></td>
                        <td class="text-warning"><%= country.todayCases %></td>
                        <td class="text-danger"><%= country.todayDeaths %></td>
                        <td class="text-warning"><%= country.active %></td>
                        <td class="text-danger"><%= country.deaths %></td>
                        <td class="text-success"><%= country.recovered %></td>
                        <td class="text-warning"><%= country.critical %></td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </main>

    <footer>
        <%- include ("../partials/footer")%>
    </footer>

    <script>
        const modal = document.getElementById("myModal");
        const span = document.getElementsByClassName("close")[0];
        span.onclick = function () {
            modal.style.display = "none";
        }
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        document.addEventListener('keydown', e => {
            if (e.keyCode === 27) {
                modal.style.display = "none";
            }
        })
    </script>

    <script>
        function myFunction() {
            // Declare variables
            let input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("myTable");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those who don't match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        };

        async function handleOnClick(countryName) {

            const response = await fetch("/country?name=" + countryName);
            const data = await response.json();

            let labels = Object.keys(data.data.timeline.cases);
            let confirmed = Object.values(data.data.timeline.cases);
            let deaths = Object.values(data.data.timeline.deaths);
            let recovered = Object.values(data.data.timeline.recovered);
            // Get the modal
            const modal = document.getElementById("myModal");
            modal.style.display = "block";

            document.getElementById('modalTitle').innerText = countryName;
            document.getElementById('modalTitle').style.textAlign = 'center';
            chartBuilder(labels, confirmed, deaths, recovered);


        }

        function chartBuilder(labels, confirmed, deaths, recovered) {
            return new Chart('myChart', {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                            label: 'Confirm: ' + confirmed[confirmed.length - 1],
                            data: confirmed,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)'
                            ],
                            borderWidth: 1
                        },
                        {
                            label: 'deaths: ' + deaths[deaths.length - 1],
                            data: deaths,
                            backgroundColor: [
                                'rgba(139, 0, 0, 0.5)'
                            ],
                            borderColor: [
                                'rgba(139, 0, 0, 1)'
                            ],
                            borderWidth: 1
                        },
                        {
                            label: 'recovered: ' + recovered[recovered.length - 1],
                            data: recovered,
                            backgroundColor: [
                                'rgba(0, 128, 0, 0.5)'
                            ],
                            borderColor: [
                                'rgba(0, 128, 0,  1)'
                            ],
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        }
    </script>
</body>

</html>